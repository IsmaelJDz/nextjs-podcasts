{"version":3,"file":"static/webpack/static/development/pages/channel.js.dd028e0f4aa4a0c89f54.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import Link from \"next/link\";\nimport Error from \"next/error\";\n\nexport default class extends React.Component {\n  static async getInitialProps({ query, res }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n      ]);\n\n      if (reqChannel.status >= 404) {\n        res.statusCode\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n\n      return { channel, audioClips, series, statusCode: 200 };\n    } catch (error) {\n      return { channel: null, audioClips: null, series: null, statusCode: 503 };\n    }\n  }\n\n  render() {\n    const { channel, audioClips, series, statusCode } = this.props;\n\n    if (statusCode !== 200) {\n      return <Error statusCode={statusCode}></Error>;\n    }\n\n    return (\n      <div>\n        <header>Podcasts</header>\n\n        <div\n          className=\"banner\"\n          style={{\n            backgroundImage: `url(${channel.urls.banner_image.original})`\n          }}\n        />\n\n        <h1>{channel.title}</h1>\n\n        {series.length > 0 && (\n          <div>\n            <h2>Series</h2>\n            <div className=\"channels\">\n              {series.map(serie => (\n                <Link href={`/channel?id=${serie.id}`} prefetch>\n                  <a className=\"channel\">\n                    <img src={serie.urls.logo_image.original} alt=\"\" />\n                    <h2>{serie.title}</h2>\n                  </a>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <h2>Ultimos Podcasts</h2>\n        {audioClips.map(clip => (\n          <Link href={`/podcast?id=${clip.id}`} prefetch key={clip.id}>\n            <a className=\"podcast\">\n              <h3>{clip.title}</h3>\n              <div className=\"meta\">\n                {Math.ceil(clip.duration / 60)} minutes\n              </div>\n            </a>\n          </Link>\n        ))}\n\n        <style jsx>{`\n          header {\n            color: #fff;\n            background: #8756ca;\n            padding: 15px;\n            text-align: center;\n          }\n\n          .banner {\n            width: 100%;\n            padding-bottom: 25%;\n            background-position: 50% 50%;\n            background-size: cover;\n            background-color: #aaa;\n          }\n\n          .channels {\n            display: grid;\n            grid-gap: 15px;\n            padding: 15px;\n            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n          }\n          a.channel {\n            display: block;\n            margin-bottom: 0.5em;\n            color: #333;\n            text-decoration: none;\n          }\n          .channel img {\n            border-radius: 3px;\n            box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n            width: 100%;\n          }\n          h1 {\n            font-weight: 600;\n            padding: 15px;\n          }\n          h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-align: center;\n          }\n\n          .podcast {\n            display: block;\n            text-decoration: none;\n            color: #333;\n            padding: 15px;\n            border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n            cursor: pointer;\n          }\n          .podcast:hover {\n            color: #000;\n          }\n          .podcast h3 {\n            margin: 0;\n          }\n          .podcast .meta {\n            color: #666;\n            margin-top: 0.5em;\n            font-size: 0.8em;\n          }\n        `}</style>\n\n        <style jsx global>{`\n          body {\n            margin: 0;\n            font-family: system-ui;\n            background: white;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;AAqmHA;;;;;;;;;;AA9JA;AACA;;;AAGA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;AAOA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAjCA;AACA;;;;;A","sourceRoot":""}